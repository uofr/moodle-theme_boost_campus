define ("theme_urcourses_default/fuzzyset",["exports"],function(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0});a.FuzzySet=void 0;a.FuzzySet=function FuzzySet(a,b,c,d){var e={};a=a||[];e.gramSizeLower=c||2;e.gramSizeUpper=d||3;e.useLevenshtein="boolean"!=typeof b?!0:b;e.exactSet={};e.matchDict={};e.items={};var f=function(a,b){for(var c=[],d,e,f=0;f<=b.length;f++){for(var g=0;g<=a.length;g++){if(f&&g){if(a.charAt(g-1)===b.charAt(f-1))e=d;else e=Math.min(c[g],c[g-1],d)+1;}else e=f+g;d=c[g];c[g]=e}}return c.pop()},g=function(a,b){if(null===a&&null===b)throw"Trying to compare two null values";if(null===a||null===b)return 0;a=a+"";b=b+"";var c=f(a,b);if(a.length>b.length){return 1-c/a.length}else{return 1-c/b.length}},h=/[^a-zA-Z0-9\u00C0-\u00FF, ]+/g,j=function(a,b){b=b||2;var c="-"+a.toLowerCase().replace(h,"")+"-",d=b-c.length,e=[];if(0<d){for(var f=0;f<d;++f){c+="-"}}for(var f=0;f<c.length-b+1;++f){e.push(c.slice(f,f+b))}return e},k=function(a,b){b=b||2;var c={},d=j(a,b),e=0;for(e;e<d.length;++e){if(d[e]in c){c[d[e]]+=1}else{c[d[e]]=1}}return c};e.get=function(a,b,c){if(c===void 0){c=.33}var d=this._get(a,c);if(!d&&"undefined"!=typeof b){return b}return d};e._get=function(a,b){for(var c=[],d=this.gramSizeUpper;d>=this.gramSizeLower;--d){c=this.__get(a,d,b);if(c&&0<c.length){return c}}return null};e.__get=function(a,b,c){var d=this._normalizeStr(a),e={},f=k(d,b),h=this.items[b],j=0,l,m,n,o,p;for(l in f){m=f[l];j+=Math.pow(m,2);if(l in this.matchDict){for(n=0;n<this.matchDict[l].length;++n){o=this.matchDict[l][n][0];p=this.matchDict[l][n][1];if(o in e){e[o]+=m*p}else{e[o]=m*p}}}}if(function(a){for(var b in a){if(a.hasOwnProperty(b))return!1}return!0}(e)){return null}var q=Math.sqrt(j),r=[],s;for(var t in e){s=e[t];r.push([s/(q*h[t][0]),h[t][1]])}var u=function(c,a){if(c[0]<a[0]){return 1}else if(c[0]>a[0]){return-1}else{return 0}};r.sort(u);if(this.useLevenshtein){for(var v=[],w=Math.min(50,r.length),n=0;n<w;++n){v.push([g(r[n][1],d),r[n][1]])}r=v;r.sort(u)}v=[];r.forEach(function(a){if(a[0]>=c){v.push([a[0],this.exactSet[a[1]]])}}.bind(this));return v};e.add=function(a){var b=this._normalizeStr(a);if(b in this.exactSet){return!1}var c=this.gramSizeLower;for(c;c<this.gramSizeUpper+1;++c){this._add(a,c)}};e._add=function(a,b){var c=this._normalizeStr(a),d=this.items[b]||[],e=d.length;d.push(0);var f=k(c,b),g=0,h,i;for(h in f){i=f[h];g+=Math.pow(i,2);if(h in this.matchDict){this.matchDict[h].push([e,i])}else{this.matchDict[h]=[[e,i]]}}var j=Math.sqrt(g);d[e]=[j,c];this.items[b]=d;this.exactSet[c]=a};e._normalizeStr=function(a){if("[object String]"!==Object.prototype.toString.call(a))throw"Must use a string as argument to FuzzySet functions";return a.toLowerCase()};e.length=function(){var a=0,b;for(b in this.exactSet){if(this.exactSet.hasOwnProperty(b)){a+=1}}return a};e.isEmpty=function(){for(var a in this.exactSet){if(this.exactSet.hasOwnProperty(a)){return!1}}return!0};e.values=function(){var a=[],b;for(b in this.exactSet){if(this.exactSet.hasOwnProperty(b)){a.push(this.exactSet[b])}}return a};var l=e.gramSizeLower;for(l;l<e.gramSizeUpper+1;++l){e.items[l]=[]}for(l=0;l<a.length;++l){e.add(a[l])}return e}});
//# sourceMappingURL=fuzzyset.min.js.map
