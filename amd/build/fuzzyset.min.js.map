{"version":3,"sources":["../src/fuzzyset.js"],"names":["FuzzySet","arr","useLevenshtein","gramSizeLower","gramSizeUpper","fuzzyset","exactSet","matchDict","items","levenshtein","str1","str2","current","prev","value","i","length","j","charAt","Math","min","pop","_distance","distance","_nonWordRe","_iterateGrams","gramSize","simplified","toLowerCase","replace","lenDiff","results","push","slice","_gramCounter","result","grams","get","defaultValue","minMatchScore","_get","__get","normalizedValue","_normalizeStr","matches","gramCounts","sumOfSquareGramCounts","gram","gramCount","index","otherGramCount","pow","obj","prop","hasOwnProperty","vectorNormal","sqrt","matchScore","matchIndex","sortDescending","a","b","sort","newResults","endIndex","forEach","scoreWordPair","bind","add","_add","str","Object","prototype","toString","call","count","isEmpty","values"],"mappings":"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","sourcesContent":["// Source: https://github.com/Glench/fuzzyset.js\n\nexport var FuzzySet = function(arr, useLevenshtein, gramSizeLower, gramSizeUpper) {\n    var fuzzyset = {\n\n    };\n\n    // default options\n    arr = arr || [];\n    fuzzyset.gramSizeLower = gramSizeLower || 2;\n    fuzzyset.gramSizeUpper = gramSizeUpper || 3;\n    fuzzyset.useLevenshtein = (typeof useLevenshtein !== 'boolean') ? true : useLevenshtein;\n\n    // define all the object functions and attributes\n    fuzzyset.exactSet = {};\n    fuzzyset.matchDict = {};\n    fuzzyset.items = {};\n\n    // helper functions\n    var levenshtein = function(str1, str2) {\n        var current = [], prev, value;\n\n        for (var i = 0; i <= str2.length; i++)\n            for (var j = 0; j <= str1.length; j++) {\n            if (i && j)\n                if (str1.charAt(j - 1) === str2.charAt(i - 1))\n                value = prev;\n                else\n                value = Math.min(current[j], current[j - 1], prev) + 1;\n            else\n                value = i + j;\n\n            prev = current[j];\n            current[j] = value;\n            }\n\n        return current.pop();\n    };\n\n    // return an edit distance from 0 to 1\n    var _distance = function(str1, str2) {\n        if (str1 === null && str2 === null) throw 'Trying to compare two null values';\n        if (str1 === null || str2 === null) return 0;\n        str1 = String(str1); str2 = String(str2);\n\n        var distance = levenshtein(str1, str2);\n        if (str1.length > str2.length) {\n            return 1 - distance / str1.length;\n        } else {\n            return 1 - distance / str2.length;\n        }\n    };\n    var _nonWordRe = /[^a-zA-Z0-9\\u00C0-\\u00FF, ]+/g;\n\n    var _iterateGrams = function(value, gramSize) {\n        gramSize = gramSize || 2;\n        var simplified = '-' + value.toLowerCase().replace(_nonWordRe, '') + '-',\n            lenDiff = gramSize - simplified.length,\n            results = [];\n        if (lenDiff > 0) {\n            for (var i = 0; i < lenDiff; ++i) {\n                simplified += '-';\n            }\n        }\n        for (var i = 0; i < simplified.length - gramSize + 1; ++i) {\n            results.push(simplified.slice(i, i + gramSize));\n        }\n        return results;\n    };\n\n    var _gramCounter = function(value, gramSize) {\n        // return an object where key=gram, value=number of occurrences\n        gramSize = gramSize || 2;\n        var result = {},\n            grams = _iterateGrams(value, gramSize),\n            i = 0;\n        for (i; i < grams.length; ++i) {\n            if (grams[i] in result) {\n                result[grams[i]] += 1;\n            } else {\n                result[grams[i]] = 1;\n            }\n        }\n        return result;\n    };\n\n    // the main functions\n    fuzzyset.get = function(value, defaultValue, minMatchScore) {\n        // check for value in set, returning defaultValue or null if none found\n        if (minMatchScore === undefined) {\n            minMatchScore = .33;\n        }\n        var result = this._get(value, minMatchScore);\n        if (!result && typeof defaultValue !== 'undefined') {\n            return defaultValue;\n        }\n        return result;\n    };\n\n    fuzzyset._get = function(value, minMatchScore) {\n        var results = [];\n        // start with high gram size and if there are no results, go to lower gram sizes\n        for (var gramSize = this.gramSizeUpper; gramSize >= this.gramSizeLower; --gramSize) {\n            results = this.__get(value, gramSize, minMatchScore);\n            if (results && results.length > 0) {\n                return results;\n            }\n        }\n        return null;\n    };\n\n    fuzzyset.__get = function(value, gramSize, minMatchScore) {\n        var normalizedValue = this._normalizeStr(value),\n            matches = {},\n            gramCounts = _gramCounter(normalizedValue, gramSize),\n            items = this.items[gramSize],\n            sumOfSquareGramCounts = 0,\n            gram,\n            gramCount,\n            i,\n            index,\n            otherGramCount;\n\n        for (gram in gramCounts) {\n            gramCount = gramCounts[gram];\n            sumOfSquareGramCounts += Math.pow(gramCount, 2);\n            if (gram in this.matchDict) {\n                for (i = 0; i < this.matchDict[gram].length; ++i) {\n                    index = this.matchDict[gram][i][0];\n                    otherGramCount = this.matchDict[gram][i][1];\n                    if (index in matches) {\n                        matches[index] += gramCount * otherGramCount;\n                    } else {\n                        matches[index] = gramCount * otherGramCount;\n                    }\n                }\n            }\n        }\n\n        function isEmptyObject(obj) {\n            for(var prop in obj) {\n                if(obj.hasOwnProperty(prop))\n                    return false;\n            }\n            return true;\n        }\n\n        if (isEmptyObject(matches)) {\n            return null;\n        }\n\n        var vectorNormal = Math.sqrt(sumOfSquareGramCounts),\n            results = [],\n            matchScore;\n        // build a results list of [score, str]\n        for (var matchIndex in matches) {\n            matchScore = matches[matchIndex];\n            results.push([matchScore / (vectorNormal * items[matchIndex][0]), items[matchIndex][1]]);\n        }\n        var sortDescending = function(a, b) {\n            if (a[0] < b[0]) {\n                return 1;\n            } else if (a[0] > b[0]) {\n                return -1;\n            } else {\n                return 0;\n            }\n        };\n        results.sort(sortDescending);\n        if (this.useLevenshtein) {\n            var newResults = [],\n                endIndex = Math.min(50, results.length);\n            // truncate somewhat arbitrarily to 50\n            for (var i = 0; i < endIndex; ++i) {\n                newResults.push([_distance(results[i][1], normalizedValue), results[i][1]]);\n            }\n            results = newResults;\n            results.sort(sortDescending);\n        }\n        newResults = [];\n        results.forEach(function(scoreWordPair) {\n            if (scoreWordPair[0] >= minMatchScore) {\n                newResults.push([scoreWordPair[0], this.exactSet[scoreWordPair[1]]]);\n            }\n        }.bind(this));\n        return newResults;\n    };\n\n    fuzzyset.add = function(value) {\n        var normalizedValue = this._normalizeStr(value);\n        if (normalizedValue in this.exactSet) {\n            return false;\n        }\n\n        var i = this.gramSizeLower;\n        for (i; i < this.gramSizeUpper + 1; ++i) {\n            this._add(value, i);\n        }\n    };\n\n    fuzzyset._add = function(value, gramSize) {\n        var normalizedValue = this._normalizeStr(value),\n            items = this.items[gramSize] || [],\n            index = items.length;\n\n        items.push(0);\n        var gramCounts = _gramCounter(normalizedValue, gramSize),\n            sumOfSquareGramCounts = 0,\n            gram, gramCount;\n        for (gram in gramCounts) {\n            gramCount = gramCounts[gram];\n            sumOfSquareGramCounts += Math.pow(gramCount, 2);\n            if (gram in this.matchDict) {\n                this.matchDict[gram].push([index, gramCount]);\n            } else {\n                this.matchDict[gram] = [[index, gramCount]];\n            }\n        }\n        var vectorNormal = Math.sqrt(sumOfSquareGramCounts);\n        items[index] = [vectorNormal, normalizedValue];\n        this.items[gramSize] = items;\n        this.exactSet[normalizedValue] = value;\n    };\n\n    fuzzyset._normalizeStr = function(str) {\n        if (Object.prototype.toString.call(str) !== '[object String]') throw 'Must use a string as argument to FuzzySet functions';\n        return str.toLowerCase();\n    };\n\n    // return length of items in set\n    fuzzyset.length = function() {\n        var count = 0,\n            prop;\n        for (prop in this.exactSet) {\n            if (this.exactSet.hasOwnProperty(prop)) {\n                count += 1;\n            }\n        }\n        return count;\n    };\n\n    // return is set is empty\n    fuzzyset.isEmpty = function() {\n        for (var prop in this.exactSet) {\n            if (this.exactSet.hasOwnProperty(prop)) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    // return list of values loaded into set\n    fuzzyset.values = function() {\n        var values = [],\n            prop;\n        for (prop in this.exactSet) {\n            if (this.exactSet.hasOwnProperty(prop)) {\n                values.push(this.exactSet[prop]);\n            }\n        }\n        return values;\n    };\n\n\n    // initialization\n    var i = fuzzyset.gramSizeLower;\n    for (i; i < fuzzyset.gramSizeUpper + 1; ++i) {\n        fuzzyset.items[i] = [];\n    }\n    // add all the items to the set\n    for (i = 0; i < arr.length; ++i) {\n        fuzzyset.add(arr[i]);\n    }\n\n    return fuzzyset;\n};\n"],"file":"fuzzyset.min.js"}